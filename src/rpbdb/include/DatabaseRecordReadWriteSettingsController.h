#ifndef RB_RPBDB_DATABASE_READ_WRITE_SETTINGS_CONTROLLER
	#define RB_RPBDB_DATABASE_READ_WRITE_SETTINGS_CONTROLLER

	#include "BaseStandardIncludes.h"
	#include <rpbdb/Types.h>

void Init_rb_RPbdb_DatabaseRecordReadWriteSettingsController();

VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_new(	int			argc,
																															VALUE*	args,
																															VALUE		rb_klass_self );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_initialize(	int				argc __attribute__ ((unused)),
																															VALUE*		args __attribute__ ((unused)),
																															VALUE			rb_self );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_parentEnvironment(	VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_parentDatabase(	VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_parentSettingsController(	VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_parentDatabaseSettingsController(	VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_parentDatabaseRecordSettingsController(	VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_filename( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_setFilename(	VALUE	rb_database_record_read_write_settings_controller,
																	VALUE	rb_filename	);
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_prohibitSyncOnClose( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitSyncOnCloseOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitSyncOnCloseOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_ignoreLease( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnIgnoreLeaseOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnIgnoreLeaseOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_returnMultiple( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnReturnMultipleOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnReturnMultipleOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_writeDataOnlyIfNonDuplicate( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnWriteDataOnlyIfNonDuplicateOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnWriteDataOnlyIfNonDuplicateOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_prohibitOverwrite( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitOverwriteOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitOverwriteOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_prohibitPageCompaction( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitPageCompactionOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnProhibitPageCompactionOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_returnPagesToFilesystem( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnReturnPagesToFilesystemOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnReturnPagesToFilesystemOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_partialAccess( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnPartialAccessOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnPartialAccessOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_truncateFileOnOpen( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnTruncateFileOnOpenOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnTruncateFileOnOpenOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_writeLocksInsteadOfReadLocks( VALUE database_write_retrieve_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnWriteLocksInsteadOfReadLocksOn( VALUE database_write_retrieve_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnWriteLocksInsteadOfReadLocksOff( VALUE database_write_retrieve_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_unsortedDuplicates( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnUnsortedDuplicatesOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnUnsortedDuplicatesOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_sortedDuplicates( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSortedDuplicatesOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSortedDuplicatesOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_duplicates( VALUE	rb_database_record_read_write_settings_controller );
	
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_serializeData( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSerializeDataOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSerializeDataOff( VALUE	rb_database_record_read_write_settings_controller );

	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_storageType( VALUE rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_setStorageType(	VALUE rb_database_record_read_write_settings_controller,
																																		VALUE	rb_class_to_specify_type );
	
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_databaseAllocatesMemoryUsingMalloc( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseAllocatesMemoryUsingMallocOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseAllocatesMemoryUsingMallocOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_databaseAllocatesMemoryUsingRealloc( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseAllocatesMemoryUsingReallocOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseAllocatesMemoryUsingReallocOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_applicationAllocatesMemory( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnApplicationAllocatesMemoryOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnApplicationAllocatesMemoryOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_databaseFreesMemory( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseFreesMemoryOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnDatabaseFreesMemoryOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_partialAccess( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnPartialAccessOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnPartialAccessOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_syncPriorToWriteReturn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSyncPriorToWriteReturnOn( VALUE	rb_database_record_read_write_settings_controller );
		VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnSyncPriorToWriteReturnOff( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_dataBufferSize( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_setDataBufferSize(	VALUE	rb_database_record_read_write_settings_controller, 
																		VALUE	rb_buffer_size );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_partialReadWriteSize( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_setPartialReadWriteSize(	VALUE	rb_database_record_read_write_settings_controller, 
																				VALUE	rb_partial_read_write_size );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_partialReadWriteOffset( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_setPartialReadWriteOffset(	VALUE	rb_database_record_read_write_settings_controller, 
																				VALUE	rb_partial_read_write_offset );

VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_storeKeyTyping( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreKeyTypingOn(	VALUE	rb_database_record_read_write_settings_controller,
																																							VALUE	rb_record_storage_type );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreKeyTypingOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_storeDataTyping( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreDataTypingOn(	VALUE	rb_database_record_read_write_settings_controller,
																																									VALUE	rb_record_storage_type );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreDataTypingOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_recordTyping( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnRecordTypingOn( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnRecordTypingOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_creationStamp( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnCreationStampOn( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnCreationStampOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_modificationStamp( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnModificationStampOn( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnModificationStampOff( VALUE	rb_database_record_read_write_settings_controller );
VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_storeFileNotPath( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreFileNotPathOn( VALUE	rb_database_record_read_write_settings_controller );
	VALUE rb_RPbdb_DatabaseRecordReadWriteSettingsController_turnStoreFileNotPathOff( VALUE	rb_database_record_read_write_settings_controller );

#endif
